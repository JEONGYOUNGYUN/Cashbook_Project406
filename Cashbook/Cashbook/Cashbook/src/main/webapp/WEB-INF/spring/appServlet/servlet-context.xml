<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/mvc 
   	  https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
      ">
   
<!--    http://www.springframework.org/schema/security -->
<!--       http://www.springframework.org/schema/security/spring-security-4.2.xsd -->
<!--       http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd -->
   
   
   <!-- servlet-context.xml : 스프링 웹(view) 설정 파일 -->
   
   
   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <!--static folder설정(정적 폴더 설정)=>css,images,upload,js -->
   <!--localhost/resouces/ -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <!-- setOrder("2") => tiles를 작동한 후에 ViewResolver를 작동하겠다라는 의미 -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
      <beans:property name="order" value="2" />
   </beans:bean>
   
   
   <!-- Tiles 설정 시작 -->
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <beans:property name="definitions">
         <beans:list>
            <beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
         </beans:list>
      </beans:property>
   </beans:bean>
   
   <!-- UrlBasedViewResolver tilesViewResolver = new UrlBasedviewResolver(); -->
   <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
      <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
      <beans:property name="order" value="1" />
      
   </beans:bean>
   
   <!-- Tiles 설정 끝 -->
   
   <!-- WebSocket 설정 시작 -->
<!-- 	<websocket:handlers allowed-origins="*"> -->
<!-- 	<websocket:mapping handler="handlerChat" path="/chat"/> -->
<!-- 	<websocket:sockjs websocket-enabled="true"/> -->
<!-- 	</websocket:handlers> -->
	
<!-- 	<beans:bean id="handlerChat" class="kr.or.ddit.handler.HandlerChat"/> -->
   
   <!-- WebSocket 설정 끝 -->
   
   <!-- kr.or.ddit 패키지 컴포넌트 스캔 대상으로 함 -->
<!--    <context:component-scan base-package="kr.or.ddit" /> -->
<!--    <context:component-scan base-package="spring.service" /> -->
   <!-- 스프링 시큐리티 애너테이션을 활성화 
   - pre-post-annotations="enabled" => @PreAuthorize, @PostAuthorize 활성화
   - secured-annotations="enabled" => @Secured를 활성화
   -->   <!--  ***@PreAuthorize : 특정 메소드를 실행하기 전에 role 체킹, @PostAuthorize : 특정 메소드를 실행한 후에 role 체킹, secured-annotations="enabled" => @Secured를 활성화-->
<!--    <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"> -->
<!--    </security:global-method-security> -->
   
 <!-- ######################################################################################################### -->  
   <!-- smtp by dasom.0831-->
   <!-- 
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com"/>
		<beans:property name="port" value="587"/>
		<beans:property name="defaultEncoding" value="utf-8"/>
		<beans:property name="username" value="yds920625@gmail.com"/>//구글계정
		<beans:property name="password" value="wuoymzxxhjgpygpf"/>//앱키 번호
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	 -->
 <!-- ######################################################################################################### -->

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>
</beans:beans>